# Author : Hitesh Talhilyani

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
      - name: Import VPC Variable File
        include_vars:  vars/vpc_setup 

  # Create VPC     
      - name: Create VPC
        ec2_vpc_net: 
          name: "{{vpc_name}}"
          cidr_block: "{{vpcCidr}}"
          region: "{{region}}"
          dns_support: yes
          dns_hostnames: yes
          tenancy: default
          state: "{{state}}"
        register: vpcout
      
      - debug: 
         var: vpcout

# Create 3 Public Subnetes in each zone 

      - name: Create public VPC Subnet1 in zone- {{zone1}}
        ec2_vpc_subnet:
            vpc_id: "{{vpcout.vpc.id}}"
            cidr: "{{PubSub1Cidr}}"
            region: "{{region}}"
            state: "{{state}}"
            resource_tags: 
              Name: openinno-pubsub1
            map_public: yes
            az: "{{zone1}}"
        register: pubsub1_out
      
      - name: Create public VPC Subnet2 zone- {{zone2}}
        ec2_vpc_subnet:
            vpc_id: "{{vpcout.vpc.id}}"
            cidr: "{{PubSub2Cidr}}"
            region: "{{region}}"
            state: "{{state}}"
            resource_tags: 
              Name: openinno-pubsub2
            map_public: yes
            az: "{{zone2}}"
        register: pubsub2_out

      - name: Create public VPC Subnet3 zone- {{zone3}}
        ec2_vpc_subnet:
            vpc_id: "{{vpcout.vpc.id}}"
            cidr: "{{PubSub3Cidr}}"
            region: "{{region}}"
            state: "{{state}}"
            resource_tags: 
              Name: openinno-pubsub3
            map_public: yes
            az: "{{zone3}}"
        register: pubsub3_out
      
      - debug:  
          var: pubsub3_out

# Create 3 Private Subnetes in Each Zone 

      - name: Create private VPC Subnet1 in zone- {{zone1}}
        ec2_vpc_subnet:
            vpc_id: "{{vpcout.vpc.id}}"
            cidr: "{{PrivSub1Cidr}}"
            region: "{{region}}"
            state: "{{state}}"
            resource_tags: 
              Name: openinno-privatesub1
            map_public: yes
            az: "{{zone1}}"
        register: private_sub1_out
  
      - name: Create private VPC Subnet2 zone- {{zone2}}
        ec2_vpc_subnet:
            vpc_id: "{{vpcout.vpc.id}}"
            cidr: "{{PrivSub2Cidr}}"
            region: "{{region}}"
            state: "{{state}}"
            resource_tags: 
              Name: openinno-privatesub2
            map_public: yes
            az: "{{zone2}}"
        register: private_sub2_out
   
      - name: Create private VPC Subnet3 zone- {{zone3}}
        ec2_vpc_subnet:
            vpc_id: "{{vpcout.vpc.id}}"
            cidr: "{{PrivSub3Cidr}}"
            region: "{{region}}"
            state: "{{state}}"
            resource_tags: 
              Name: openinno-privatesub1
            map_public: yes
            az: "{{zone3}}"
        register: private_sub3_out

      - name: Create Internet gateway for {{vpc_name}}
        ec2_vpc_igw:
            vpc_id: "{{vpcout.vpc.id}}"
            state: "{{state}}"
            region: "{{region}}"
            tags:
                Tag1: "{{vpc_igw_tag}}"
        register: igw_out

      - name: Set up public subnet route table
        ec2_vpc_route_table:
            vpc_id: "{{vpcout.vpc.id}}"
            region: "{{region}}"
            tags:
              Name: "{{public_rt_tag}}"
            subnets:
              - "{{ pubsub1_out.subnet.id }}"
              - "{{ pubsub2_out.subnet.id }}"
              - "{{ pubsub3_out.subnet.id }}"
            routes:
              - dest: 0.0.0.0/0
                gateway_id: "{{ igw_out.gateway_id }}"
        register: pubRT_out   

      - name: Create new nat gateway and allocate new EIP if nat gateway does not yet exist in the subnet.
        ec2_vpc_nat_gateway:
              state: "{{state}}"
              subnet_id: "{{ pubsub1_out.subnet.id }}"
              wait: true
              region: "{{region}}"
              if_exist_do_not_create: true
        register: NATGW_out

      - debug:
          var: NATGW_out

      - name: Set up private subnet route table 
        ec2_vpc_route_table:
            vpc_id: "{{vpcout.vpc.id}}"
            region: "{{region}}"
            tags:
              Name: "{{private_rt_tag}}"
            subnets:
              - "{{ private_sub1_out.subnet.id }}"
              - "{{ private_sub2_out.subnet.id }}"
              - "{{ private_sub3_out.subnet.id }}"
            routes:
              - dest: 0.0.0.0/0
                gateway_id: "{{ NATGW_out.nat_gateway_id }}"
        register: privRT_out
      
      - debug:
          var: "{{item}}"
        loop:
          - vpcout.vpc.id
          - pubsub1_out.subnet.id
          - pubsub2_out.subnet.id
          - pubsub3_out.subnet.id
          - private_sub1_out.subnet.id
          - private_sub2_out.subnet.id
          - private_sub3_out.subnet.id
          - igw_out.gateway_id
          - pubRT_out.route_table.id
          - NATGW_out.nat_gateway_id
          - privRT_out.route_table.id
      
      - set_fact:
          vpcid: "{{vpcout.vpc.id}}"
          pubsub1id: "{{pubsub1_out.subnet.id}}"
          pubsub2id: "{{pubsub1_out.subnet.id}}"
          pubsub3id: "{{pubsub1_out.subnet.id}}"
          privsub1id: "{{private_sub1_out.subnet.id}}"
          privsub2id:  "{{private_sub2_out.subnet.id}}"
          privsub3id:  "{{private_sub3_out.subnet.id}}"
          igw1id:       "{{igw_out.gateway_id}}"
          pubrt1id:    "{{pubRT_out.route_table.id}}"
          natgwid:      "{{NATGW_out.nat_gateway_id}}"
          privrt1id:    "{{privRT_out.route_table.id}}"
          cacheable: yes

      - name: Create variables files for vpc output in correct format 
        copy: 
            content: "region: {{region}}\nvpcid: {{vpcout.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub1_out.subnet.id}}\nprivsub1id: {{private_sub1_out.subnet.id}}\nprivsub2id: {{private_sub2_out.subnet.id}}\nprivsub3id: {{private_sub3_out.subnet.id}}\nigw1id: {{igw_out.gateway_id}}\npubrt1id: {{pubRT_out.route_table.id}}\nnatgwid: {{NATGW_out.nat_gateway_id}}\nprivrt1id: {{privRT_out.route_table.id}}"
            dest: vars/output_vars  
      